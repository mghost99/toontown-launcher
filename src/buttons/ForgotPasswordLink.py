UP = b'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'
DOWN = b'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'
HOVER = DOWN

from tkinter import *
from PIL import ImageTk
from base64 import b64decode as b

class ForgotPasswordLink(Canvas):

    def __init__(self, *args, **kwargs):
        Canvas.__init__(self, *args, **kwargs)
        self.place(x=512, y=220, height=13, width=104)

        self.config(highlightthickness=0, bd=0, relief='flat', bg="darkgray")
        self.image = ImageTk.PhotoImage(data=b(UP))
        self.btn = self.create_image(0, 0, image=self.image, anchor=NW)
        self.bind('<Leave>', self.on_leave)
        self.bind('<Enter>', self.on_enter)
        self.bind('<ButtonRelease-1>', self.on_release)
        self.bind('<ButtonPress-1>', self.on_click)
    
    def update_image(self, image):
        self.image = ImageTk.PhotoImage(data=b(image))
        self.itemconfig(self.btn, image=self.image)

    def on_enter(self, e):
        self.update_image(HOVER)

    def on_leave(self, e):
        self.update_image(UP)
    
    def on_click(self, e):
        self.update_image(DOWN)
        print("clicked")
    
    def on_release(self, e):
        self.update_image(UP)