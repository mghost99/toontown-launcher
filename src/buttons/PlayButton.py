UP = b'/9j/4AAQSkZJRgABAgAAZABkAAD/7AARRHVja3kAAQAEAAAAUAAA/+4ADkFkb2JlAGTAAAAAAf/bAIQAAgICAgICAgICAgMCAgIDBAMCAgMEBQQEBAQEBQYFBQUFBQUGBgcHCAcHBgkJCgoJCQwMDAwMDAwMDAwMDAwMDAEDAwMFBAUJBgYJDQsJCw0PDg4ODg8PDAwMDAwPDwwMDAwMDA8MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAEQgAJABVAwERAAIRAQMRAf/EALgAAAAHAQEAAAAAAAAAAAAAAAIDBQYHCAkEAQEAAQQDAQAAAAAAAAAAAAAABgMEBQcBAggAEAABAwMCBAQCBQYPAAAAAAABAgMEEQUGAAchEhMIMUEUFVFhcSIyMxaBQiNDgyShsdFSYnKCklNjo7N0JQkRAAECAwQECgcFBQkBAAAAAAECAwARBCESBQYxQVETYXGBkaEiMhQVB7FSYpKjFhdCIyRkJcGi0oMn8HKCssLiQ3OThP/aAAwDAQACEQMRAD8A3PyC6sWO1v3F5IX06JYZrQuOK4JSP4z8tCmb8zs5cw1ytdE7sglM5X1q7Kf2nYkE6ocYdQKrHg2nXpOwRTrKN5pSri+2w+t8tLKXAw6WGUkcClPKCVU+J1ydiedMx42veu1a2knsoaJbSBxJIJ41FSuGLlwrJDKGgSkCe0Xlcs9HJDJm77pttPcbi3A5klafU3LpVSPEjnpwGmDT+PO9itqVcS3D6FRLDJbB1J9wQG29wjd15m7PfWbl0/tIh3brcv0hsmnjrL68fZtcq6lPGtwelUeOS2BpSn3BHrfcMh2eq0tX5py6IJC7am7VkAp8QWgebh58NeKsfCN4aupubb7kue9KPfJbEp3U+4IVF713dtKluPyEIQCVrVPdAAHiSSNICsxkmQrqj/0X/FGPkyn2J9wQnsdwCpSXlRrymSmMguSFNXUrDaB4qWU1oPmdKrdx1Er1ZUieia3Lf3oz8lseqn3BBVu7hm7u441ab81dHWRzPNRLv11IFaVUGyogV1s8rH2AC5V1KQdq3B6VR45LYGlKfcEFM9wsSdONuj32NMuQqDBbuwcfHKKn9GCVcBxPDWy1ZgbRfVV1QTtK3AOe9KPHJbGm6n3BEm4du8/Kmtw33F9Rz7EV9wuocA4kIWQClVPAeGpnAfMbMGXXQ4p9VSxPrIdJVZ7KiSpJ2SN2elJgfxzJDW7K0gCWtIukcY0EdMWP91he2+69X9z6fU5vP4ctPjXhT4666+bMP8H8Xv8A4bd7yeuXqy9e91LvrWRUfcXe8d3l15y/twa+KGnvXcX4eMLcbXyiMxLkpI/nsskpP5KnVI+fS1KYoGPsreJI4QAB0LPPBZkVlLtXI6ykcilWxk/+Mkn9b4+ddVv4ZwR1d4TwQsbAYXtvuTfe4PMN0MTjZsjB12tdoRMCnTHiMwpEhxllsrSj65QSQeBPjptnDE8QwpnD6ageLO+v3pWTUVJSCoyJsnyDRFaZ3q6uiqGWKdwovTBltmkCfPHPtdb+3HurRlOPYTtU7snuHjdvTdMayW0uhot0dLbb1Y3TQsJcUkLQtBqk/VVUVTtjz2YMnlp6qqxV07irq0LE52TKetMiyd0g2EWiRkY2ufxTASh1x/fNlUiCOi23iIMMLJdvcQxjsu213Hi4pboO46MghquOVoaQZ63UXSShYXIFVK+7A8acNS9DjNXV5vqaJTqjTbtUkTNyRbSR1eWH9HiL7mPOM3yW7pkmfV7IOiFK2xmd4N09pNr7ghUzHL3Pk3fMIIcW229AtcZUjoOlopVyOromgPjTw8dIvrOCYZV16LHEJCGzIEhbirt4TsmkW8UFOaHDhdAt5Ni5STxkgdE58kP3ue2O2Ub2VzrNNl8ehWPINtL0bVk8i1F9KigLbi3GG8ha+VfImQlwmnAJ4HidRGRM14wcYYpcUcUtuoRfQFy2FTawQJiZSU8togDy3jVeK5tqrWSl1M0zlsJSRxyIhFue09g3l7ftvt0tgcUt+H7oQZLVly2DYY4i9RyZy2y5odbbpQMqcTJQpR+o1VXz05YzC/geO1FBjDqnaUgrbLhvSCfvGiCfWALZA7S5CHNPi72FYm7T1jhU0QSkqM7BNSZcY6vCqG13KYvtdtdkuy20e22K2uJmFhXCvmX5cwwlE9bERPTZQ++klfNJUFuuJJ8keStPsj1+JYvT1uI1zqyyu8htsmaJqtJSnR1BJKTL1tYh9lB6txFblQ6tRSo3Upn1dM1EDYkWDlh22jNFN3W2Lbeo6iUyUGvmFimo6pwubSgRZI+iLCqsHmysEWXT6I0VTc3jYn7bznkbuDVB5ci2nF0/vJrqd7679Mbk+r3m5/hvb2Xv2xzBu0+Mz13J8srvohx9wRUjB7s4ASUWq6EU+IjEjRr55pmrDP8AuV/ojXy2txFIPrt/5owY/Eq/8TUf3ER3h4cNkXP7GLxEh2vuSvtyYVMgQXbbLnxUpS4XWWIMpbiAhVAoqSkih4HVY+a9MtbuGtIMlELAOiRK0yPPHN3mswfE2m02EkgcZuxD7veZtHg+OZLB7dtjnMMyzKWVsPX19thlLBIIQ6Awt5TnSKipCCpKArjx4gkifLLFcQqGl41XB1lszugkz2jrBIF7QVSKiLIRbyjXVryO+PF1KTYkAmfBaABPWYmq0bXZZvB2FbZ4nhiI0i/9dq4NMzHughxEe5yi4OoQQDRVePw+Ohepx6lwTO9TUVUw3IpsE5TbTKyIhzEmcPzC669O7osE9KRAu1LabNsL31za57mQ4NuueIYTDYjtxZKZMdpF4mOrS8XeUBKuSA4Dx4JPz4e8wcxUdfgrDdCVKS6+omYuqO7SBKWybieWJLPWZmsXo2SwCElRHHcH+8c0S3t9iWzOYYf3F4VtfuaNwpW58i7XbIIj8lp9EGbeGnW0ONcjbZUnqgHnJV9lPHzI7jGI4vRVeHVVfS7gU4QhBAIvoaIJBmTbd+zZpNmwYrqqtp3qV6pZ3YaCUpsIvBBGm06tVmkxWP8A838ku0fL9wsIWpbdqkWWPeJdvcBBYuMOQILqkg+BcSoc/wA0p+GjrzsoWlUlPVDthZQCNaFJvjmPZ4zBZ5j0zRYp6hPaNnJb/DMcZiqV3yq45NutudnV+kepvNzv8yOhRJIZYjuFplpFeIS22hKE/JI1YNNh7dJhlLSMiSEtpPGSJknhJJJ4TFtZFwNtFIhSRYlIA5QCo8ZJhz2TI1uXq0NhRUVzY6QkedXEjTGqogGVn2T6INK3DwGHD7J9EbNN/cS/+bH/ANh7QxdP0z/+z9kcOz/Wf5cWEzuwDILDIihoPut1WhhQqHElJSts/wBZJOr080sqO5gwgopxN9pQcbHrEAgp5Umz2gmBHLuJ9wqgsmSTYTs1g8hjDLcLtQ3CsF+mpxOL+IcdeeWq3ONqAksIKjRl9tRB5kDhzCoPjwP1RTGG57pFI3daC0+mxaVAjrDTxf3TIjRwx3Tl/wA0cMrKZJqVbt2Qn6qvaSRZI7NI4dMR+1sF3JWhu7MYm/keKxMhbDWRQLbNkRY85CUKbCZDbDqEuDkWpNFgihPxOpNWb8vPFBqA04UGaCpIUUWz6pUDK0A2bIisfr8uYo8H983fGtSQrlGw2Dmjjt/bHu9AiMxk4lJX0k0KylNSfPz0q9nvCnFFW+EEmH5wwGkZS0H0mQ07YV7ds53cY5DZtGIZXmmMWKLzeistvu86NGYC1qcUG2mJCEJBUongPEk6bPZlytVLLlS0w44dKlNoUo2StKkkmwQDYizlmpeU4l1m31kBR54KVs53hLeuspeZZqqZfWG4t7km7zyuZHZStLbUhRkVdSgOrCUrJAClU8TrYZlymAhIZYkgkpFxHVUZTKer1SZCZEjYNkNhS5eugb9nqmY+7Ek7SNhsHNCXj/bj3DYYpUzBlZFh13fa6E252eY/BcfbKgoocVGcbUU1ANK004rM64DXC7V7t1AMwlaQsA7ReBiVrnMs1LCUF5BULSVC8Cdsjr4oHZO3nuSxaS/d8Vl5LjWRzUON3K+2ybIhyJLbrgdWh11h1C1grAUQVcTxPHWKrOeXqtIbqA042JEJUkKCSBIEBQIFlmjRGlU5lyopkNLfbUpPrJCk+7qlqgFu7Zt6Ibbxk47Omy5Ty35ctw8y3HHDVSlKJJJJ4knWX89YQsi64kACQGwCCjBc14HhtPuhUJPRzCJ42a7Zcpg5PbMu3ES1Y7Djshua3bnVhT8t5k87SSlJISgLAKubir7IHGoHsWzUMUT4fhSFPVD3VF0aAbD0a+yntKIlA/njzQw9qgcZpVTUtJBXoShJsNutRFiZa7ZzsOiSGZ4xR/JvTr6Tl3afDNDzelQ04yVU+NFV+nV+/TVPyd8v3hvd3O9q7xe3un1b/UnpuRxh43+P73Lq3pS9mV3nlbxxcJynLo6EQcV4z/2Drr9P6z3Xj1vQUpX/ADOb6tf4dBebPk3fDxru29kO3Ley1TufeXdl7q6ZRJYd4ld/C37vB2emycRUPUU4+81/Y6ED9Lfy3xImmvG5da/PkgxHU483vVf2OkHPpj9nu3xIU/Wfb6I55Hr6/u3uvL/T6XN/JrCPph9ru/xIwfGtV/ogg+7fUp7p9n9JzdGlan4fLSn9Lvy/xIx+te30R3DrdMc3vHU/O5ejT8ldJp+mF63u8v5kbfrPt9EAPXoae81pw+50v/S78t8SMK8Zl9vogpPq/wA73n/Q1v8A0s/LfEhp+ve3+7B9u/DPusX8Ve69PnHp/V06HN/Z4fTTVk5L+Wd2vwDu85dfdS3ktV+f3kp6L1myITFO/wAx3u/wXtHJq5otF/03tP6n2jofLpdOmirrT4YYf8fLH//Z'
DOWN = b'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'
HOVER = b'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'
DISABLED = b'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'

from tkinter import *
from PIL import ImageTk
from base64 import b64decode as b

class PlayButton(Canvas):
    def __init__(self, *args, **kwargs):
        Canvas.__init__(self, *args, **kwargs)
        self.place(x=653, y=170, height=36, width=85)

        self.config(highlightthickness=0, bd=0, relief='flat', bg="darkgray")
        self.image = ImageTk.PhotoImage(data=b(UP))
        self.btn = self.create_image(0, 0, image=self.image, anchor=NW)
        self.bind('<Leave>', self.on_leave)
        self.bind('<Enter>', self.on_enter)
        self.bind('<ButtonRelease-1>', self.on_release)
        self.bind('<ButtonPress-1>', self.on_click)
    
    def update_image(self, image):
        self.image = ImageTk.PhotoImage(data=b(image))
        self.itemconfig(self.btn, image=self.image)

    def on_enter(self, e):
        self.update_image(HOVER)

    def on_leave(self, e):
        self.update_image(UP)
    
    def on_click(self, e):
        self.update_image(DOWN)
        print("clicked")
    
    def on_release(self, e):
        self.update_image(UP)
    
    def on_disable(self):
        self.update_image(DISABLED)
    
    def on_enable(self):
        self.update_image(UP)